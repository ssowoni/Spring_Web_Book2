<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- pattern 속성은 URI의 패턴을 의미, access의 경우 권한을 체크한다.
			/sample/member는 'ROLE_MEMBER'라는 권한이 있는 사용자만 접근할 수 있다.   -->	
	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/sample/all" access="permitAll" />
		<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')" />
		<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')" />
		
		<security:form-login login-page="/customLogin" />
		
		<!-- AcessDeniedHandler 인터페이스의 구현체를 지정하거나 error-page를 지정할 수 있다.  -->
		<security:access-denied-handler error-page="/accessError"/>
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<!-- adming은 ROLE_ADMIN과 ROLE_MEMBER의 권한 부여 2개를 받는다. -->
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
				<security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN,ROLE_MEMBER"/>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
	

</beans>
